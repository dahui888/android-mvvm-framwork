apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
ext {
    bintrayRepo = 'maven' //创建的仓库名
    bintrayName = 'mvvm'//在bintray网站中项目中填写的名称

    publishedGroupId = 'com.gomeos.mvvm'//一般为包名
    libraryName = 'mvvm'//library名字需要和本地的lib module一致
    artifact = 'mvvm'//同上

    libraryDescription = 'activitystarter project.'//项目描述
    libraryVersion = '1.0.0'//项目版本号,只需要在每次更新的时候填写

    developerId = 'gomeos'//开发者Id
    developerName = 'gomeos'//开发者名称
    developerEmail = 'gomeos@126.com'//邮箱

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ['Apache-2.0']

    siteUrl = 'https://github.com/gomeos/AndroidMVVM'      // 项目的主页
    gitUrl = 'https://github.com/gomeos/AndroidMVVM.git'   // Git仓库的url
}

version = libraryVersion
group = publishedGroupId      // Maven Group ID for the artifact
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription

                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }


    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

//当前要上传的lib名字，随着module名字不同需要进行更改
tasks.getByPath(":mvvm:javadoc").enabled = false

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            // Optional. The passphrase for GPG signing'
            // gpg {
            //    sign = true //Determines whether to GPG sign the files. The default is false
            //    passphrase = properties.getProperty("bintray.gpg.password")
            //}
        }

    }
}

javadoc { //jav doc采用utf-8编码否则会报“GBK的不可映射字符”错误
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
    }
}


